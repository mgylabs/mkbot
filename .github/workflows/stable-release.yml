name: Stable Release

on:
  push:
    tags:
      - "v*"

env:
  DEFAULT_PYTHON: "3.12"

jobs:
  stable-release:
    name: Stable Release
    if: github.repository == 'mgylabs/mkbot'
    runs-on: windows-2022
    timeout-minutes: 60
    environment:
      name: "Stable"
      url: ${{ steps.update-changelog.outputs.d_url }}
    defaults:
      run:
        shell: pwsh
    steps:
      - uses: actions/checkout@v3
      - name: Install poetry
        run: pipx install poetry
      - name: Set up Python ${{ env.DEFAULT_PYTHON }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.DEFAULT_PYTHON }}
          cache: "poetry"
          cache-dependency-path: |
            **/poetry.lock
            .github/flags/release.flag
      - name: Git Config
        env:
          GITHUB_USERNAME: ${{ secrets.DEPLOY_USER }}
          GITHUB_TOKEN: ${{ secrets.DEPLOY_TOKEN }}
        run: git config --global url.https://${Env:GITHUB_USERNAME}:${Env:GITHUB_TOKEN}@github.com/.insteadOf https://github.com/
      - name: Install dependencies
        run: |
          poetry run python -m pip install -U pip
          poetry install --no-root --without dev -E release -E full
      - name: Version
        env:
          API_KEY: ${{ secrets.API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          poetry run python package/vc.py --stable ; if ($LASTEXITCODE) { exit $LASTEXITCODE }
          echo "mkbot_version=$(cat version.txt)" >> $env:GITHUB_ENV
          if ($Env:API_KEY) { echo $Env:API_KEY > src\lib\mgylabs\constants\APIKey.py }
      - name: Build MK Bot
        run: |
          poetry run scripts\build.bat --stable
      - name: Packaging
        run: |
          & "${Env:programfiles(x86)}\Inno Setup 6\iscc.exe" "/DNameLong=Mulgyeol MK Bot" "/DNameShort=MK Bot" "/DVersion=${Env:mkbot_version}" "/DAppExeName=MKBot.exe" "/DAppMutex=MKBot" "/DExtDirName=.mkbot" "/DDName=mkbot" "package\MKBot.iss"
      - name: Compress Setup
        run: |
          Compress-Archive -Path MKBotSetup-${Env:mkbot_version}.exe -DestinationPath MKBotSetup.zip
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Mulgyeol MK Bot ${{ github.ref }}
          body_path: temp_changelog.md
          draft: true
          prerelease: false
      - name: Upload Release Asset
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG_NAME: ${{ github.ref }}
          UPLOAD_URL: ${{ steps.create_release.outputs.upload_url }}
        run: |
          poetry run python package/ghtool.py -ua
      - name: Update CHANGELOG
        id: update-changelog
        env:
          TAG_NAME: ${{ github.ref }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BASE_REF: ${{ github.event.base_ref }}
        run: |
          rm -Force changelogs\unreleased\*.yml
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "GitHub Action"
          git add CHANGELOG.md
          git add changelogs\unreleased
          git commit -m "Update CHANGELOG.md for $(${Env:TAG_NAME}.Substring(10))"
          git push -u https://${Env:GITHUB_ACTOR}:${Env:GITHUB_TOKEN}@github.com/${Env:GITHUB_REPOSITORY}.git HEAD:refs/heads/update-changelog-for-$(${Env:TAG_NAME}.Substring(10)) --force
          poetry run python package/ghtool.py -cp
